-- MySQL Script generated by MySQL Workbench
-- Fri 24 Jan 2025 10:20:30 PM -03
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema business
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema business
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `business` ;
USE `business` ;

-- -----------------------------------------------------
-- Table `business`.`category`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`category` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`product`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`product` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `description` VARCHAR(255) NOT NULL,
  `price` DECIMAL NOT NULL,
  `stock` INT NOT NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NULL,
  `category_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE,
  INDEX `fk_product_category1_idx` (`category_id` ASC) VISIBLE,
  CONSTRAINT `fk_product_category1`
    FOREIGN KEY (`category_id`)
    REFERENCES `business`.`category` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`users` (
  `id` INT NOT NULL,
  `email` VARCHAR(45) NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`cart_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`cart_item` (
  `created_at` DATETIME NOT NULL,
  `users_id` INT NOT NULL,
  `product_id` INT NOT NULL,
  INDEX `fk_cart_item_users_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_cart_item_product1_idx` (`product_id` ASC) VISIBLE,
  PRIMARY KEY (`users_id`, `product_id`),
  CONSTRAINT `fk_cart_item_users`
    FOREIGN KEY (`users_id`)
    REFERENCES `business`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_cart_item_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `business`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`order_status`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`order_status` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`order`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`order` (
  `id` INT NOT NULL,
  `total_price` VARCHAR(45) NULL,
  `created_at` DATETIME NOT NULL,
  `updated_at` DATETIME NULL,
  `users_id` INT NOT NULL,
  `order_status_id` INT NOT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_order_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_order_order_status1_idx` (`order_status_id` ASC) VISIBLE,
  CONSTRAINT `fk_order_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `business`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_order_order_status1`
    FOREIGN KEY (`order_status_id`)
    REFERENCES `business`.`order_status` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`ordem_item`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`ordem_item` (
  `quantity` INT NOT NULL,
  `unit_price` DECIMAL NOT NULL,
  `total_price` DECIMAL NOT NULL,
  `product_id` INT NOT NULL,
  `order_id` INT NOT NULL,
  PRIMARY KEY (`quantity`, `product_id`, `order_id`),
  INDEX `fk_ordem_item_product1_idx` (`product_id` ASC) VISIBLE,
  INDEX `fk_ordem_item_order1_idx` (`order_id` ASC) VISIBLE,
  CONSTRAINT `fk_ordem_item_product1`
    FOREIGN KEY (`product_id`)
    REFERENCES `business`.`product` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ordem_item_order1`
    FOREIGN KEY (`order_id`)
    REFERENCES `business`.`order` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`role` (
  `id` INT NOT NULL,
  `name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`),
  UNIQUE INDEX `name_UNIQUE` (`name` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `business`.`user_roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `business`.`user_roles` (
  `users_id` INT NOT NULL,
  `role_id` INT NOT NULL,
  INDEX `fk_user_roles_users1_idx` (`users_id` ASC) VISIBLE,
  INDEX `fk_user_roles_role1_idx` (`role_id` ASC) VISIBLE,
  PRIMARY KEY (`users_id`, `role_id`),
  CONSTRAINT `fk_user_roles_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `business`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_user_roles_role1`
    FOREIGN KEY (`role_id`)
    REFERENCES `business`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
